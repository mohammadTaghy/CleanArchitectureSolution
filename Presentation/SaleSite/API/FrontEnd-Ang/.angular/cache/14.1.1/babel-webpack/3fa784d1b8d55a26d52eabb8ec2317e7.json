{"ast":null,"code":"import { map, take } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ngrx/store\";\nexport let LoginGuard = /*#__PURE__*/(() => {\n  class LoginGuard {\n    constructor(router, store) {\n      this.router = router;\n      this.store = store;\n    }\n\n    canActivate(route, state) {\n      return this.store.select('loginState').pipe(take(1), map(loginState => {\n        return loginState.user;\n      }), map(user => {\n        const isAuth = !!user;\n\n        if (isAuth) {\n          return true;\n        }\n\n        return this.router.createUrlTree(['/auth']);\n      }));\n    }\n\n  }\n\n  LoginGuard.ɵfac = function LoginGuard_Factory(t) {\n    return new (t || LoginGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.Store));\n  };\n\n  LoginGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginGuard,\n    factory: LoginGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return LoginGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}