{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { ofType, Effect, createEffect } from \"@ngrx/effects\";\nimport { map } from 'rxjs/operators';\nimport * as LoginActions from \"./login.action\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../../../commonComponent/callAPI/callAPI.common\";\nimport * as i3 from \"../../../commonComponent/apiAddresses/apiAddresses.common\"; //class LoginRequestClass {\n//  constructor(public UserName: string, public Password: string) { }\n//}\n\nexport class LoginEffects {\n  //@Effect({ dispatch: false })\n  //authRedirect = this.actions$.pipe(\n  //  ofType(LoginActions.Login_SUCCESS),\n  //  tap(() => {\n  //    this.router.navigate(['/AdminPanel']);\n  //  })\n  //);\n  //@Effect()\n  //autoLogin = this.actions$.pipe(\n  //  ofType(LoginActions.AUTO_LOGIN),\n  //  map(() => {\n  //    const user: User = JSON.parse(localStorage.getItem('userData'));\n  //    if (!user) {\n  //      return { type: 'عدم دسترسی' };\n  //    }\n  //    return new LoginActions.LoginSuccess(user);\n  //  })\n  //);\n  //@Effect()\n  //logout = this.actions$.pipe(\n  //  ofType(LoginActions.LOGOUT),\n  //  tap(() => {\n  //    new LoginActions.Logout();\n  //    localStorage.removeItem('userData')\n  //    this.router.navigate([''])\n  //  })\n  //)\n  constructor(sources, actions$, callAPIComponent, apiAddresses) {\n    this.sources = sources;\n    this.actions$ = actions$;\n    this.callAPIComponent = callAPIComponent;\n    this.apiAddresses = apiAddresses;\n    this.login$ = createEffect(() => this.actions$.pipe(ofType(LoginActions.LOGIN_START), map(() => {\n      const user = JSON.parse(localStorage.getItem('userData'));\n\n      if (!user) {\n        return {\n          type: 'عدم دسترسی'\n        };\n      }\n\n      return {\n        type: 'عدم دسترسی'\n      };\n    }) //switchMap((data: LoginActions.LoginStart) => {\n    //  console.log('effect');\n    //  console.log(data);\n    //  return this.callAPIComponent.PostApi<LoginRequestClass, User>\n    //    (this.apiAddresses.GetServiceUrl(ApiUrlPostfix.CmsLogin),\n    //      new LoginRequestClass(data.payload.userName, data.payload.password))\n    //    .pipe(\n    //      map(resData => {\n    //        localStorage.setItem('userData', JSON.stringify(resData));\n    //        return new LoginActions.LoginSuccess(resData);\n    //      }),\n    //      catchError((errorRes: any) => {\n    //        return of(new LoginActions.LoginFail(errorRes.error));\n    //      }\n    //      ))\n    //})\n    ));\n    /*sources.addEffects(this);*/\n\n    console.log('effect inject');\n  }\n\n}\n\nLoginEffects.ɵfac = function LoginEffects_Factory(t) {\n  return new (t || LoginEffects)(i0.ɵɵinject(i1.EffectSources), i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.CallAPIComponent), i0.ɵɵinject(i3.ApiAddresses));\n};\n\nLoginEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginEffects,\n  factory: LoginEffects.ɵfac\n});\n\n__decorate([Effect()], LoginEffects.prototype, \"login$\", void 0);","map":null,"metadata":{},"sourceType":"module"}