{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { ofType, Effect } from \"@ngrx/effects\";\nimport { switchMap, catchError, map } from 'rxjs/operators';\nimport { of } from \"rxjs\";\nimport * as CmsActions from \"./cms-module.action\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"../../../commonComponent/callAPI/callAPI.common\";\nimport * as i5 from \"../../../commonComponent/apiAddresses/apiAddresses.common\";\n\nclass CmsResponce {\n  constructor(Errors, IsSuccess, Result) {\n    this.Errors = Errors;\n    this.IsSuccess = IsSuccess;\n    this.Result = Result;\n  }\n\n}\n\nfunction SendRequestProcess(url, payLoad, callAPIComponent) {\n  return callAPIComponent.PostApi(url, payLoad).pipe(map(resData => {\n    return new CmsActions.RequestSuccess(resData);\n  }), catchError(errorRes => {\n    return of(new CmsActions.RequestFail(errorRes.error));\n  }));\n}\n\nexport class CmsModuleEffects {\n  constructor(actions$, router, http, callAPIComponent, apiAddresses) {\n    this.actions$ = actions$;\n    this.router = router;\n    this.http = http;\n    this.callAPIComponent = callAPIComponent;\n    this.apiAddresses = apiAddresses;\n    this.addRequestStart = this.actions$.pipe(ofType(CmsActions.Add_Request_Start), switchMap(data => {\n      return SendRequestProcess(data.serviceUrl, data.payload, this.callAPIComponent);\n    }));\n    this.editRequestStart = this.actions$.pipe(ofType(CmsActions.Edit_Request_Start), switchMap(data => {\n      return SendRequestProcess(data.serviceUrl, data.payload, this.callAPIComponent);\n    }));\n    this.deleteRequestStart = this.actions$.pipe(ofType(CmsActions.Delete_Request_Start), switchMap(data => {\n      return SendRequestProcess(data.serviceUrl, data.payload, this.callAPIComponent);\n    }));\n    this.fetchData = this.actions$.pipe(ofType(CmsActions.Fetch_Data), switchMap(data => {\n      return this.callAPIComponent.PostApi(data.serviceUrl, data.payload);\n    }), map(resData => {\n      return new CmsActions.SetData(resData.Result);\n    }));\n  }\n\n}\n\nCmsModuleEffects.ɵfac = function CmsModuleEffects_Factory(t) {\n  return new (t || CmsModuleEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.HttpClient), i0.ɵɵinject(i4.CallAPIComponent), i0.ɵɵinject(i5.ApiAddresses));\n};\n\nCmsModuleEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CmsModuleEffects,\n  factory: CmsModuleEffects.ɵfac,\n  providedIn: 'root'\n});\n\n__decorate([Effect()], CmsModuleEffects.prototype, \"addRequestStart\", void 0);\n\n__decorate([Effect()], CmsModuleEffects.prototype, \"editRequestStart\", void 0);\n\n__decorate([Effect()], CmsModuleEffects.prototype, \"deleteRequestStart\", void 0);\n\n__decorate([Effect()], CmsModuleEffects.prototype, \"fetchData\", void 0);","map":null,"metadata":{},"sourceType":"module"}