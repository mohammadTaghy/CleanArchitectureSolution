{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { ViewChild } from \"@angular/core\";\nimport { AlertComponent } from \"../../commonComponent/alert/alert.component\";\nimport { PlaceholderDirective } from \"../../commonComponent/placeholder/placeholder.directive\";\nimport * as fromLoginAction from \"./store/login.action\";\nexport class LoginComponent {\n  constructor(isLoading, hide, store, componentFactoryResolver) {\n    this.isLoading = isLoading;\n    this.hide = hide;\n    this.store = store;\n    this.componentFactoryResolver = componentFactoryResolver;\n    isLoading = false;\n    hide = true;\n  }\n\n  onSubmit(loginForm) {\n    if (!loginForm.valid) return;\n    new fromLoginAction.LoginStart({\n      userName: loginForm.value.userName,\n      password: loginForm.value.password\n    });\n  }\n\n  showErrorAlert(message) {\n    // const alertCmp = new AlertComponent();\n    const alertCmpFactory = this.componentFactoryResolver.resolveComponentFactory(AlertComponent);\n    const hostViewContainerRef = this.alertHost.viewContainerRef;\n    hostViewContainerRef.clear();\n    const componentRef = hostViewContainerRef.createComponent(alertCmpFactory);\n    componentRef.instance.message = message;\n    this.closeSub = componentRef.instance.close.subscribe(() => {\n      this.closeSub.unsubscribe();\n      hostViewContainerRef.clear();\n    });\n  }\n\n}\n\n__decorate([ViewChild(PlaceholderDirective, {\n  static: false\n})], LoginComponent.prototype, \"alertHost\", void 0);","map":null,"metadata":{},"sourceType":"module"}